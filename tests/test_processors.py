from wirecode import processors, plans, plan_to_string, string_to_plan
import pytest


@pytest.fixture
def plan_in():
    return string_to_plan(
        "G01 X+0051.61879503 Y-0003.53553391\nG01 X+0048.08326112 Y+0000.00000000\nG01 X+0043.27493501 Y+0004.80832611 (INT)\nG01 X+0038.46660890 Y+0009.61665222 (INT)\nG01 X+0033.65828278 Y+0014.42497834 (INT)\nG01 X+0028.84995667 Y+0019.23330445 (INT)\nG01 X+0024.04163056 Y+0024.04163056 (INT)\nG01 X+0019.23330445 Y+0028.84995667 (INT)\nG01 X+0014.42497834 Y+0033.65828278 (INT)\nG01 X+0009.61665222 Y+0038.46660890 (INT)\nG01 X+0004.80832611 Y+0043.27493501 (INT)\nG01 X+0000.00000000 Y+0048.08326112 (INT)\nG01 X-0003.53553391 Y+0051.61879503\nG01 X+0003.53553391 Y+0051.61879503\nG01 X+0000.00000000 Y+0048.08326112\nG01 X-0004.80832611 Y+0043.27493501 (INT)\nG01 X-0009.61665222 Y+0038.46660890 (INT)\nG01 X-0014.42497834 Y+0033.65828278 (INT)\nG01 X-0019.23330445 Y+0028.84995667 (INT)\nG01 X-0024.04163056 Y+0024.04163056 (INT)\nG01 X-0028.84995667 Y+0019.23330445 (INT)\nG01 X-0033.65828278 Y+0014.42497834 (INT)\nG01 X-0038.46660890 Y+0009.61665222 (INT)\nG01 X-0043.27493501 Y+0004.80832611 (INT)\nG01 X-0048.08326112 Y+0000.00000000 (INT)\nG01 X-0051.61879503 Y-0003.53553391\nG01 X-0051.61879503 Y+0003.53553391\nG01 X-0048.08326112 Y+0000.00000000\nG01 X-0043.27493501 Y-0004.80832611 (INT)\nG01 X-0038.46660890 Y-0009.61665222 (INT)\nG01 X-0033.65828278 Y-0014.42497834 (INT)\nG01 X-0028.84995667 Y-0019.23330445 (INT)\nG01 X-0024.04163056 Y-0024.04163056 (INT)\nG01 X-0019.23330445 Y-0028.84995667 (INT)\nG01 X-0014.42497834 Y-0033.65828278 (INT)\nG01 X-0009.61665222 Y-0038.46660890 (INT)\nG01 X-0004.80832611 Y-0043.27493501 (INT)\nG01 X-0000.00000000 Y-0048.08326112 (INT)\nG01 X+0003.53553391 Y-0051.61879503\nG01 X-0003.53553391 Y-0051.61879503\nG01 X-0000.00000000 Y-0048.08326112\nG01 X+0004.80832611 Y-0043.27493501 (INT)\nG01 X+0009.61665222 Y-0038.46660890 (INT)\nG01 X+0014.42497834 Y-0033.65828278 (INT)\nG01 X+0019.23330445 Y-0028.84995667 (INT)\nG01 X+0024.04163056 Y-0024.04163056 (INT)\nG01 X+0028.84995667 Y-0019.23330445 (INT)\nG01 X+0033.65828278 Y-0014.42497834 (INT)\nG01 X+0038.46660890 Y-0009.61665222 (INT)\nG01 X+0043.27493501 Y-0004.80832611 (INT)\nG01 X+0048.08326112 Y-0000.00000000 (INT)\nG01 X+0051.61879503 Y+0003.53553391"
    )


@pytest.fixture
def plan_out():
    return string_to_plan(
        "G01 X+0051.61879503 Y-0003.53553391\nG01 X+0048.08326112 Y+0000.00000000\nG01 X+0045.67909807 Y+0002.40416306 S1000\nG01 X+0043.27493501 Y+0004.80832611 S0000\nG01 X+0040.87077195 Y+0007.21248917 S1000\nG01 X+0038.46660890 Y+0009.61665222 S0000\nG01 X+0036.06244584 Y+0012.02081528 S1000\nG01 X+0033.65828278 Y+0014.42497834 S0000\nG01 X+0031.25411973 Y+0016.82914140 S1000\nG01 X+0028.84995667 Y+0019.23330445 S0000\nG01 X+0026.44579361 Y+0021.63746751 S1000\nG01 X+0024.04163056 Y+0024.04163056 S0000\nG01 X+0021.63746751 Y+0026.44579361 S1000\nG01 X+0019.23330445 Y+0028.84995667 S0000\nG01 X+0016.82914140 Y+0031.25411973 S1000\nG01 X+0014.42497834 Y+0033.65828278 S0000\nG01 X+0012.02081528 Y+0036.06244584 S1000\nG01 X+0009.61665222 Y+0038.46660890 S0000\nG01 X+0007.21248917 Y+0040.87077195 S1000\nG01 X+0004.80832611 Y+0043.27493501 S0000\nG01 X+0002.40416306 Y+0045.67909807 S1000\nG01 X+0000.00000000 Y+0048.08326112 S0000\nG01 X-0001.76776695 Y+0049.85102808 S1000\nG01 X-0003.53553391 Y+0051.61879503 S0000\nG01 X+0003.53553391 Y+0051.61879503\nG01 X+0000.00000000 Y+0048.08326112\nG01 X-0002.40416306 Y+0045.67909807 S1000\nG01 X-0004.80832611 Y+0043.27493501 S0000\nG01 X-0007.21248917 Y+0040.87077195 S1000\nG01 X-0009.61665222 Y+0038.46660890 S0000\nG01 X-0012.02081528 Y+0036.06244584 S1000\nG01 X-0014.42497834 Y+0033.65828278 S0000\nG01 X-0016.82914140 Y+0031.25411973 S1000\nG01 X-0019.23330445 Y+0028.84995667 S0000\nG01 X-0021.63746751 Y+0026.44579361 S1000\nG01 X-0024.04163056 Y+0024.04163056 S0000\nG01 X-0026.44579361 Y+0021.63746751 S1000\nG01 X-0028.84995667 Y+0019.23330445 S0000\nG01 X-0031.25411973 Y+0016.82914140 S1000\nG01 X-0033.65828278 Y+0014.42497834 S0000\nG01 X-0036.06244584 Y+0012.02081528 S1000\nG01 X-0038.46660890 Y+0009.61665222 S0000\nG01 X-0040.87077195 Y+0007.21248917 S1000\nG01 X-0043.27493501 Y+0004.80832611 S0000\nG01 X-0045.67909807 Y+0002.40416306 S1000\nG01 X-0048.08326112 Y+0000.00000000 S0000\nG01 X-0049.85102808 Y-0001.76776695 S1000\nG01 X-0051.61879503 Y-0003.53553391 S0000\nG01 X-0051.61879503 Y+0003.53553391\nG01 X-0048.08326112 Y+0000.00000000\nG01 X-0045.67909807 Y-0002.40416306 S1000\nG01 X-0043.27493501 Y-0004.80832611 S0000\nG01 X-0040.87077195 Y-0007.21248917 S1000\nG01 X-0038.46660890 Y-0009.61665222 S0000\nG01 X-0036.06244584 Y-0012.02081528 S1000\nG01 X-0033.65828278 Y-0014.42497834 S0000\nG01 X-0031.25411973 Y-0016.82914140 S1000\nG01 X-0028.84995667 Y-0019.23330445 S0000\nG01 X-0026.44579361 Y-0021.63746751 S1000\nG01 X-0024.04163056 Y-0024.04163056 S0000\nG01 X-0021.63746751 Y-0026.44579361 S1000\nG01 X-0019.23330445 Y-0028.84995667 S0000\nG01 X-0016.82914140 Y-0031.25411973 S1000\nG01 X-0014.42497834 Y-0033.65828278 S0000\nG01 X-0012.02081528 Y-0036.06244584 S1000\nG01 X-0009.61665222 Y-0038.46660890 S0000\nG01 X-0007.21248917 Y-0040.87077195 S1000\nG01 X-0004.80832611 Y-0043.27493501 S0000\nG01 X-0002.40416306 Y-0045.67909807 S1000\nG01 X-0000.00000000 Y-0048.08326112 S0000\nG01 X+0001.76776695 Y-0049.85102808 S1000\nG01 X+0003.53553391 Y-0051.61879503 S0000\nG01 X-0003.53553391 Y-0051.61879503\nG01 X-0000.00000000 Y-0048.08326112\nG01 X+0002.40416306 Y-0045.67909807 S1000\nG01 X+0004.80832611 Y-0043.27493501 S0000\nG01 X+0007.21248917 Y-0040.87077195 S1000\nG01 X+0009.61665222 Y-0038.46660890 S0000\nG01 X+0012.02081528 Y-0036.06244584 S1000\nG01 X+0014.42497834 Y-0033.65828278 S0000\nG01 X+0016.82914140 Y-0031.25411973 S1000\nG01 X+0019.23330445 Y-0028.84995667 S0000\nG01 X+0021.63746751 Y-0026.44579361 S1000\nG01 X+0024.04163056 Y-0024.04163056 S0000\nG01 X+0026.44579361 Y-0021.63746751 S1000\nG01 X+0028.84995667 Y-0019.23330445 S0000\nG01 X+0031.25411973 Y-0016.82914140 S1000\nG01 X+0033.65828278 Y-0014.42497834 S0000\nG01 X+0036.06244584 Y-0012.02081528 S1000\nG01 X+0038.46660890 Y-0009.61665222 S0000\nG01 X+0040.87077195 Y-0007.21248917 S1000\nG01 X+0043.27493501 Y-0004.80832611 S0000\nG01 X+0045.67909807 Y-0002.40416306 S1000\nG01 X+0048.08326112 Y-0000.00000000 S0000\nG01 X+0049.85102808 Y+0001.76776695 S1000\nG01 X+0051.61879503 Y+0003.53553391 S0000"
    )


@pytest.fixture
def int_labels():
    return [
        ((48.08326112 + 0j), (43.27493501 + 4.80832611j)),
        ((43.27493501 + 4.80832611j), (38.4666089 + 9.61665222j)),
        ((38.4666089 + 9.61665222j), (33.65828278 + 14.42497834j)),
        ((33.65828278 + 14.42497834j), (28.84995667 + 19.23330445j)),
        ((28.84995667 + 19.23330445j), (24.04163056 + 24.04163056j)),
        ((24.04163056 + 24.04163056j), (19.23330445 + 28.84995667j)),
        ((19.23330445 + 28.84995667j), (14.42497834 + 33.65828278j)),
        ((14.42497834 + 33.65828278j), (9.61665222 + 38.4666089j)),
        ((9.61665222 + 38.4666089j), (4.80832611 + 43.27493501j)),
        ((4.80832611 + 43.27493501j), 48.08326112j),
        None,
        (48.08326112j, (-4.80832611 + 43.27493501j)),
        ((-4.80832611 + 43.27493501j), (-9.61665222 + 38.4666089j)),
        ((-9.61665222 + 38.4666089j), (-14.42497834 + 33.65828278j)),
        ((-14.42497834 + 33.65828278j), (-19.23330445 + 28.84995667j)),
        ((-19.23330445 + 28.84995667j), (-24.04163056 + 24.04163056j)),
        ((-24.04163056 + 24.04163056j), (-28.84995667 + 19.23330445j)),
        ((-28.84995667 + 19.23330445j), (-33.65828278 + 14.42497834j)),
        ((-33.65828278 + 14.42497834j), (-38.4666089 + 9.61665222j)),
        ((-38.4666089 + 9.61665222j), (-43.27493501 + 4.80832611j)),
        ((-43.27493501 + 4.80832611j), (-48.08326112 + 0j)),
        None,
        ((-48.08326112 + 0j), (-43.27493501 - 4.80832611j)),
        ((-43.27493501 - 4.80832611j), (-38.4666089 - 9.61665222j)),
        ((-38.4666089 - 9.61665222j), (-33.65828278 - 14.42497834j)),
        ((-33.65828278 - 14.42497834j), (-28.84995667 - 19.23330445j)),
        ((-28.84995667 - 19.23330445j), (-24.04163056 - 24.04163056j)),
        ((-24.04163056 - 24.04163056j), (-19.23330445 - 28.84995667j)),
        ((-19.23330445 - 28.84995667j), (-14.42497834 - 33.65828278j)),
        ((-14.42497834 - 33.65828278j), (-9.61665222 - 38.4666089j)),
        ((-9.61665222 - 38.4666089j), (-4.80832611 - 43.27493501j)),
        ((-4.80832611 - 43.27493501j), (-0 - 48.08326112j)),
        None,
        ((-0 - 48.08326112j), (4.80832611 - 43.27493501j)),
        ((4.80832611 - 43.27493501j), (9.61665222 - 38.4666089j)),
        ((9.61665222 - 38.4666089j), (14.42497834 - 33.65828278j)),
        ((14.42497834 - 33.65828278j), (19.23330445 - 28.84995667j)),
        ((19.23330445 - 28.84995667j), (24.04163056 - 24.04163056j)),
        ((24.04163056 - 24.04163056j), (28.84995667 - 19.23330445j)),
        ((28.84995667 - 19.23330445j), (33.65828278 - 14.42497834j)),
        ((33.65828278 - 14.42497834j), (38.4666089 - 9.61665222j)),
        ((38.4666089 - 9.61665222j), (43.27493501 - 4.80832611j)),
        ((43.27493501 - 4.80832611j), (48.08326112 + 0j)),
    ]


def test_preprocess_integration(plan_in, plan_out):
    after_processing = processors.preprocess_integration_gcode(plan_in)
    assert after_processing == plan_out


def test_label_integrations(plan_in, int_labels):
    labels = processors.integral_labels(plan_in)
    assert labels == int_labels
